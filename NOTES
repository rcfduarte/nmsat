===============================


#################################################
#     Initial notes on parameter refactoring    #
#################################################

Talking points:
- emoo / range > 3: not entirely sure...


********************************************
***             Questions                ***
********************************************
1. at one point it's trying to extract activity from the last 2 seconds (defined by 'lag') of a template: 2198 - 2200

2. do we want edge_wrap? what if it's not defined, then default is..? or we make it compulsory?
    - I actually added a padding, that changes the probabilities no? Also, in the paper the edges of the grid have unit
    length, that again influences the connections eventually

********************************************
***                 TODO                 ***
********************************************

#### ANALYSIS
class ActivityAnalysis:
    - analyse_spiking (new)
        - compute_synchrony
        - compute_isi_stats
        - compute_spike_stats
        - compute_time_resolved_statistics
    - analyse_analog (new)
        - compute_analog_stats
    - analyse_state_divergence
    -= analyse_activity_dynamics [RENAME?]
    -= analyse_state_matrix [redundant?]
    x characterize_population_activity
    
class PerformanceAnalysis:
    - analyse_performance_results

Other stuff:
    - readout_test / train should be methods of the Readout class.. they're getting a readout as a parameter.
    - structure results dict. Turn it into a Result(dict) class, and make a clear structure in it, with variables created during class creation:
        - population_name
            - performance
            - rank
            - dimensionality
            - ...
      = easier to pass around
    - comment some functions, don't know where they belong
    - manifold_learning?
